
Initial wordlists from OpenTaal and random sources

Created Twitter feed script

If you have a spare screen like me it's fun to just turn it on and watch random tweets fly by. 
It's fun to watch the text and see what people are talking about if you can look past the absolute illiterate garbage. What a bunch of frustrated tits.

Then run script to filter out all lines that appear to be words
Every 2.5 seconds I get the the output of this illiterate fuckgutter

Tried sorting twitter words on word count, but I noticed the words are very much capturing the zeitgeist instead of being useful in password cracking.

Because of some bug in my Twitter script, a lot of words are appended together
Omg I failed because I wrote the tweets to a file and forgot to add newlines, so the only newlines came from the tweets temselves.. 

Downloaded Dutch Wikipedia (all nopic Nederlands):
https://wiki.kiwix.org/wiki/Content_in_all_languages
./zimdump dump --dir=wikidump  ~/Downloads/wikipedia_nl_all_nopic_2020-07.zim
Filtered all ascii-only words

Legacy hashcat for testing:
https://hashcat.net/wiki/doku.php?id=hashcat-legacy

https://stackoverflow.com/questions/23699919/regular-expression-for-password-complexity
Pwd complexity regex:
grep -Poa "((?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@<=>~{|}^_\`?@\[\\]*+,-./:;&'\(\) \!\"#$%]).{8,})"

Ended up creating custom pwd hashcat rules
Years are not proper in normal rules!


Dutch bible:
https://oje.home.xs4all.nl/txt/bijbel/Het-Boek.txt

Populaire citaten:
http://www.citaten.nl/populaireauteurs.php

Spreekwoorden:
https://nl.wikipedia.org/wiki/Lijst_van_Nederlandse_spreekwoorden_A-E

Gezegden:
https://nl.wikipedia.org/wiki/Lijst_van_uitdrukkingen_en_gezegden_A-E

Straatnamen:
https://www.kadaster.nl/zakelijk/producten/adressen-en-gebouwen/bag-compact
(kost geld)

Family names:
https://github.com/digitalheir/family-names-in-the-netherlands

XML-bestand met namen:
http://www.naamkunde.net/?page_id=293


--------------------------------------- Creating a passive password list for a password policy

From weakpass.com
	(donated 100 bucks, you should too)

Took:
	- DCHTPassv1.0.txt (22.84 Gb)
	- hashesorg2019 (13G)
	- weakpass_2a (86G)

I sorted then on unique values and extracted all passwords that matches the password policy.
(one uppercase, one lowecase, a number and a special character)
It went a little something like this:

cat DCHTPassv1.0.txt hashesorg2019 weakpass_2a | grep -Poa "((?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@<=>~{|}^_\`?@\[\\]*+,-./:;&'\(\) \!\"#$%]).{8,})" | sort -u > allPWdPolicy

GZIP=-9 tar cvzf allPwdPolicy.tar.gz allPwdPolicy
Uncompressed: 2.2G
Compressed: 567M, nice

Normally I would have to go through 121.84 (all three wordlists), but now only 2.2G, nice. And 567M can quickly be shared, so that's also neat.

---------------------------------- Masks

To filter:
https://blog.netspi.com/wp-content/uploads/2016/01/2015-Top40.hcmask
https://raw.githubusercontent.com/trustedsec/hate_crack/master/masks/pathwell.hcmask
https://raw.githubusercontent.com/hashcat/hashcat/master/masks/8char-1l-1u-1d-1s-compliant.hcmask
https://raw.githubusercontent.com/hashcat/hashcat/master/masks/8char-1l-1u-1d-1s-noncompliant.hcmask

filter:
https://github.com/hashcat/hashcat/blob/master/masks/rockyou-7-2592000.hcmask

ultimate:
https://github.com/hashcat/hashcat/blob/master/masks/hashcat-default.hcmask
